# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TOKEN_SECRET: krgjglerjtwpqierpsdinvl3ngogihownvon3goi
  PORT: 5005
  ORIGIN: http://localhost:5173
  MONGODB_URI: "mongodb+srv://rodlop06:ctDq2y75SdpuF5U3@cluster0.7s82gqz.mongodb.net/"
  CLOUDINARY_NAME: depxadgb3
  CLOUDINARY_KEY: 516952131158793
  CLOUDINARY_SECRET: WK2OgxMO5jROb8qFEJXB1YhAPgU

steps:
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'node-room3servertoken'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'q-support-server-room3'
    cliSources: '.'
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Ironhack Subs'
    appType: 'webAppLinux'
    WebAppName: 'Q-support-server'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    RuntimeStack: 'NODE|18-lts'
    StartupCommand: 'cd s; npm run start'